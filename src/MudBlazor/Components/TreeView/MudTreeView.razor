@namespace MudBlazor
@inherits MudComponentBase
@typeparam T

<ul @attributes="UserAttributes" class="@Classname" style="@Stylename">
	<CascadingValue Value="@MudTreeRoot" IsFixed="true">
		@if (ItemTemplate != null && Items != null)
		{
			@if (VisibleItemsLimit > 0)
			{
				foreach (var item in Items.Take(_currentLimit ?? VisibleItemsLimit.Value))
					@ItemTemplate(item)

				@if (Items.Count > (_currentLimit ?? VisibleItemsLimit.Value))
				{
					<li>
						...and @(Items.Count - (_currentLimit ?? VisibleItemsLimit)) more items. <MudButton Variant=Variant.Filled OnClick=IncrementVisibleItemsLimit>Expand (@_currentLimit)</MudButton>
					</li>
				}
			}
			else
			{
				foreach (var item in Items)
					@ItemTemplate(item)
			}
		}
		else if (ChildContent != null)
		{
			@ChildContent
		}
	</CascadingValue>
</ul>

@code{
	private int? _currentLimit;
	public void IncrementVisibleItemsLimit()
	{
		if (_currentLimit is null)
			_currentLimit = VisibleItemsLimit;

		_currentLimit += this.VisibleItemsIncrement;
	}
}